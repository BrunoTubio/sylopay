version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hackathon-bnpl-postgres
    environment:
      POSTGRES_DB: bnpl_hackathon
      POSTGRES_USER: bnpl_user
      POSTGRES_PASSWORD: bnpl_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bnpl_user -d bnpl_hackathon"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hackathon-bnpl-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://bnpl_user:bnpl_password@postgres:5432/bnpl_hackathon
      STELLAR_NETWORK: TESTNET
      STELLAR_HORIZON_URL: https://horizon-testnet.stellar.org
      API_PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hackathon-bnpl-frontend
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_STELLAR_EXPLORER_URL: https://stellar.expert/explorer/testnet
    ports:
      - "3001:3001"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
    driver: local